'use strict';

/*Initialise the variables used. 
   ticket ---> The random number generated by the system and the key to the game (Between 1 and 20)
   tries ----> The number of tries left (is also the score), starts from 20 up till 0
   flag ---> Used to distinguish when the game ends , prevents further execution
   highscore --> Stores the highest scores among multiple rounds. Reset when the page is refreshed

*/
let ticket, tries, flag, highscore;

function rng() {
  return Math.trunc(Math.random() * 20) + 1;
}

function showMessage(message) {
  document.querySelector('.message').textContent = message;
}

function updateUI() {
  document.querySelector('.score').textContent = tries;
  document.querySelector('.message').textContent = 'Start guessing...';
  document.querySelector('body').style.backgroundColor = '#222';
  document.querySelector('.number').textContent = '?';
  document.querySelector('.guess').value = '';
  document.querySelector('.number').style.width = '15rem';
}

function initialiseGame() {
  ticket = rng();
  tries = 20;
  flag = 0;
  highscore = 0;
  updateUI();
  console.log(ticket);
}

initialiseGame();

function gameWin() {
  showMessage('üéâ You win!!');
  document.querySelector('body').style.backgroundColor = '#60b347';
  document.querySelector('.number').textContent = ticket;
  document.querySelector('.number').style.width = '30rem';
  flag = 1;
}

function gameLose() {
  showMessage('üí• You Lose!!');
  document.querySelector('body').style.backgroundColor = 'red';
  document.querySelector('.score').textContent = tries - 1;
  document.querySelector('.number').textContent = ticket;
}

function highScore() {
  if (tries > highscore) {
    highscore = tries;
  }
  document.querySelector('.highscore').textContent = highscore;
}

function handleCheckButtonClick() {
  const val = Number(document.querySelector('.guess').value);

  if (flag != 1) {
    if (tries > 1) {
      if (!val) {
        showMessage('‚õî No number entered!!');
      } else if (val == ticket) {
        gameWin();
        highScore();
      } else {
        showMessage(val > ticket ? '‚¨ÜÔ∏è Too high!!' : '‚¨áÔ∏è Too Low!!');
        tries--;
      }
      document.querySelector('.score').textContent = tries;
    } else {
      gameLose();
    }
  }
}

function handleAgainButtonClick() {
  initialiseGame();
}

document
  .querySelector('.check')
  .addEventListener('click', handleCheckButtonClick);
document
  .querySelector('.again')
  .addEventListener('click', handleAgainButtonClick);
